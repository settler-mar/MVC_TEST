<?php

namespace App\models;

use Core\Model;
use Core\SITE;

class Tasks extends Model
{
  static $table_name = 'tasks';

  const LIMIT = 3;


  static $validates_length_of = [
      ['name', 'within' => [3,20]],
      ['email', 'within' => [8,50]],
      ['text', 'within' => [20,300]],
    ];

   static $validates_format_of = [
	      ['email', 'with' => '/[A-Za-z0-9\.|-|_]*[@]{1}[A-Za-z0-9\.|-|_]*[.]{1}[a-z]{2,5}$/']
   ];

  public function getAttributesRule()
  {
    return [
        'on_create' => ['name', 'email', 'text'],
        'on_update' => ['status', 'text'],
    ];
  }

  static function getOrderList()
  {
    return [
        '' => 'по-умолчанию',
        'name' => 'имени пользователя',
        'email' => 'email',
        'status' => 'статусу',
    ];
  }

  static function getList()
  {
    $params = [
        'conditions' => ['', []],
        'limit' => self::LIMIT,
        'offset' => (SITE::$app->request->page - 1) * self::LIMIT
    ];

    $orderList = self::getOrderList();
    if (!isset($orderList[SITE::$app->request->order])) {
      d(SITE::$app->request->order);
      throw new \Exception("Page not found");
    }
    if (!empty(SITE::$app->request->order)) {
      $params['order'] = SITE::$app->request->order;
    }

    return self::find('all', $params);
  }

  static function getPagination()
  {
    $count = self::count();
    $totalPage = ceil($count / self::LIMIT);

    if ($totalPage>0 && SITE::$app->request->page > $totalPage) {
      throw new \Exception("Page not found");
    }

    if ($totalPage == 1) {
      return false;
    }

    $url = SITE::$app->request->url .
        (empty(SITE::$app->request->order) ? '' : ('/order:' . SITE::$app->request->order));
    $page = SITE::$app->request->page;
    return [
        'url' => $url,
        'page' => $page,
        'total' => $totalPage,
        'prev_link' => ($page>2)?$url.'/page_'.($page-1):'/',
        'next_link' => $url.'/page_'.($page+1),
    ];
  }

  public function save($validate = true)
  {
    return parent::save($validate); // TODO: Change the autogenerated stub
  }
}